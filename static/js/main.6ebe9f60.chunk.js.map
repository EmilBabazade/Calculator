{"version":3,"sources":["calculator/Pad.js","calculator/Calculator.js","App.js","index.js"],"names":["useStyles","createUseStyles","pad","backgroundColor","props","bg","color","gridColumn","column","gridRow","row","fontSize","display","justifyContent","alignItems","margin","cursor","userSelect","border","Pad","character","onClick","styles","className","FONT_COLOR","calculator","padding","width","height","fontFamily","gridTemplateColumns","gridTemplateRows","textAlign","overflowY","input","output","maxWidth","wordWrap","calculate","a","b","operation","Calculator","useState","setInput","history","setHistory","currOp","setCurrOp","currNum","setCurrNum","result","setResult","handleNumberClick","evt","userInput","target","textContent","lastInput","length","isNaN","parseFloat","includes","handleClickOperand","op","slice","numberBG","operationBG","newResult","html","boxSizing","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ebe9f60.chunk.js","sourcesContent":["import React from 'react'\nimport {createUseStyles} from 'react-jss'\nimport PropTpes from 'prop-types'\n\nconst useStyles = createUseStyles({\n    pad: {\n        backgroundColor: props => props.bg,\n        color: props => `${props.color}`,\n        gridColumn: props => `${props.column}`,\n        gridRow: props => `${props.row}`,\n        fontSize: 20,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 1,\n        cursor: 'pointer',\n        userSelect: 'none',\n\n        '&:hover': {\n            margin: 0,\n            color: '#000000',\n            border: '1px solid grey'\n        }\n    }\n})\n\nconst Pad = ({\n    column, row, character, bg, color, onClick\n}) => {\n    const styles = useStyles({column, row, bg, color})\n\n    return (\n        <div onClick={onClick} className={styles.pad}>{character}</div>\n    )\n}\n\nPad.propTypes = {\n    column: PropTpes.number.isRequired,\n    row: PropTpes.number.isRequired,\n    character: PropTpes.string.isRequired,\n    bg: PropTpes.string.isRequired,\n    color: PropTpes.string.isRequired,\n    onClick: PropTpes.func.isRequired\n}\n\nexport default Pad","import React, {useState, useEffect} from 'react'\nimport {createUseStyles} from 'react-jss'\nimport Pad from './Pad'\n\nconst FONT_COLOR = 'white'\n\nconst useStyles = createUseStyles({\n    calculator: {\n        padding: 5,\n        margin: 0,\n        width: 400,\n        height: 500,\n        backgroundColor: '#000000',\n        border: 'solid #47476b 2px',\n        display: 'grid',\n        fontFamily: 'Share Tech Mono, sans-serif',\n        gridTemplateColumns: '1fr 1fr 1fr 1fr',\n        gridTemplateRows: '1fr 1fr 1fr 1fr 1fr 1fr'\n    },\n    '@media screen and (max-width: 430px)': {\n        calculator: {\n            width: '90%',\n            height: '70%'\n        }\n    },\n    display: {\n        gridColumn: '1/7',\n        gridRow: '1',\n        margin: 0,\n        color: `${FONT_COLOR}`,\n        '& *': {\n            margin: 0,\n            padding: 0,\n            textAlign: 'end'\n        },\n        '& h3': {\n            color: '#b07200'\n        },\n        fontFamily: 'Geostar, sans-serif',\n        width: '100%',\n        overflowY: 'scroll'\n    },\n    input: {\n        fontSize: 35\n    },\n    output: {\n        color: '#b07200',\n        maxWidth: '100%',\n        wordWrap: 'break-word'\n    }\n})\n\nconst calculate = (a, b, operation) => {\n    switch(operation) {\n    case '+':\n        return a + b\n    case '-':\n        return a - b\n    case '/':\n        return a / b\n    case 'x':\n        return a * b\n    default:\n        return a\n    }\n}\n\nconst Calculator = () => {\n    const [input, setInput] = useState('')\n    const [history, setHistory] = useState('')\n    const [currOp, setCurrOp] = useState('')\n    const [currNum, setCurrNum] = useState('')\n    const [result, setResult] = useState(null)\n\n    const handleNumberClick = (evt) => {\n        const userInput = evt.target.textContent\n        \n        // don't allow first input dot or dot right after an operand\n        const lastInput = history[history.length - 1]\n        if(userInput === '.' && isNaN(parseFloat(lastInput))) return\n\n        // don't allow double dot\n        if(userInput === '.' && currNum.includes('.')) return\n\n        setInput(userInput)\n        setHistory(`${history}${userInput}`)\n        setCurrNum(`${currNum}${userInput}`)\n    }\n\n    const handleClickOperand = () => {\n        return (evt) => {\n            const op = evt.target.textContent\n            // don't allow operand as first input\n            if(history.length === 0) return\n\n            setInput(op)\n\n            // update history\n            const lastInput = history[history.length - 1]\n            if(isNaN(parseFloat(lastInput)) || lastInput === '.') {\n                // replace if lastinput was an operand or a dot\n                if(currNum.length > 0 && result !== null && op != null){\n                    //calculate before updating currOp\n                    setResult(calculate(result, parseFloat(currNum), currOp))\n                    setCurrNum('')\n                }\n                setCurrOp(op)\n                setHistory(`${history.slice(0, -1)}${op}`)\n            } else {\n                if(currNum.length > 0 && result !== null && op != null){\n                    //calculate before updating currOp\n                    setResult(calculate(result, parseFloat(currNum), currOp))\n                    setCurrNum('')\n                }\n                setCurrOp(op)\n                setHistory(`${history}${op}`)\n            }\n            \n            // put first number in result\n            if(result === null) {\n                setResult(parseFloat(currNum))\n                setCurrNum('')\n            } \n        }\n    }\n\n    const handleCalculate = () => {\n        if(currNum.length !== 0 && currOp.length !== 0 && result !== null) {\n            const newResult = calculate(result, parseFloat(currNum), currOp)\n            setResult(newResult)\n            setCurrNum('')\n            setHistory(`${history}=${newResult}`)\n        }\n        \n    }\n\n    const handleAC = () => {\n        setInput('')\n        setHistory('')\n        setCurrNum('')\n        setCurrOp('')\n        setResult(null)\n    }\n\n    const styles = useStyles()\n    \n    const numberBG = '#4d4d4d'\n    const operationBG = '#666666'\n    const acBG = '#ac3939'\n    const equalsBg = '#004466'\n    return(\n        <div className={styles.calculator}>\n            <div className={styles.display}>\n                <div className={styles.output}>{history}</div>\n                <div className={styles.input}>{input}</div>\n            </div>\n\n            <Pad bg={acBG} onClick={handleAC} character='AC' column='1/3' row='2' color={FONT_COLOR} />\n            <Pad bg={operationBG} onClick={handleClickOperand()} character='/' column='3' row='2' color={FONT_COLOR} />\n            <Pad bg={operationBG} onClick={handleClickOperand()} character='x' column='4' row='2' color={FONT_COLOR} />\n\n            <Pad bg={numberBG} onClick={handleNumberClick} character='7' column='1' row='3' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='8' column='2' row='3' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='9' column='3' row='3' color={FONT_COLOR} />\n            <Pad bg={operationBG} onClick={handleClickOperand()} character='-' column='4' row='3' color={FONT_COLOR} />\n            \n            <Pad bg={numberBG} onClick={handleNumberClick} character='4' column='1' row='4' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='5' column='2' row='4' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='6' column='3' row='4' color={FONT_COLOR} />\n            <Pad bg={operationBG} onClick={handleClickOperand()} character='+' column='4' row='4' color={FONT_COLOR} />\n\n            <Pad bg={numberBG} onClick={handleNumberClick} character='1' column='1' row='5' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='2' column='2' row='5' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='3' column='3' row='5' color={FONT_COLOR} />\n            <Pad bg={equalsBg} onClick={handleCalculate} character='=' column='4' row='5/7' color={FONT_COLOR} />\n\n            <Pad bg={numberBG} onClick={handleNumberClick} character='0' column='1/3' row='6' color={FONT_COLOR} />\n            <Pad bg={numberBG} onClick={handleNumberClick} character='.' column='3' row='6' color={FONT_COLOR} />\n        </div>\n    )\n}\n\nexport default Calculator","import React from 'react'\nimport {createUseStyles} from 'react-jss'\nimport 'jss-plugin-global'\nimport Calculator from './calculator/Calculator'\n\nconst useStyles = createUseStyles({\n    '@global': {\n        html: {\n            boxSizing: 'border-box'\n        },\n        'html, body, #root': {\n            height: '100%',\n            width: '100%',\n            margin: 0,\n            padding: 0\n        },\n        '*, *:before, *:after': {\n            boxSizing: 'inherit'\n        }\n    },\n    container: {\n        backgroundColor: '#c2c2d6',\n        width: '100%',\n        height: '100%',\n        padding: 0,\n        margin: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n})\n\nconst App = () => {\n    const styles = useStyles()\n\n    return (\n        <div className={styles.container}>\n            <Calculator />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}